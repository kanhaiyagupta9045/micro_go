version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_order
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order_db  
    volumes:
      - pgdata:/var/lib/postgresql/data  
    networks:
      - app-network
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network  

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network  

  user_service:
    build:
      context: .  
    ports:
      - "5001:5001"
    environment:
      KAFKA_BROKER: kafka:29092 
      DB_URL: postgres://postgres:postgres@postgres:5432/order_db  
    depends_on:
      - postgres
      - kafka
    networks:
      - app-network  

volumes:
  pgdata:  

networks:
  app-network:
